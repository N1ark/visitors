TODO

Allow the user to specify how to deal with (parameterized) nonlocal type constructors.
  Maybe just by calling Foo.iter2 / Foo.map2 when dealing with type foo at arity 2.
    but: there is an environment
  Use this mechanism to (optionally) deal with built-in types.
  Deal with int, bool, float, etc.

Allow the user to choose exactly which visitors they want generated.

Test on the Frama-C AST.

Try the system with hash-consed terms. (With/without binding.)

Document everything.
  Document the names that could be captured:
    Pervasives
    Failure

Avoid warnings about unused variables.

Deal with abstract types just as if they were nonlocal.

Think about compositionality.
  By multiple inheritance?

Think about transforming a closed recursive type definition into an open one.

Show to Fran√ßois Bobot and Virgile Prevosto. Try the Frama-C AST.
Show to Andrei and Jean-Christophe.

Add a LICENSE. Announce.

------------------------------------------------------------------------------

BUGS

The tuple trick of always reconstructing a tuple may not work as desired?
It may force the user to also reconstruct a tuple when implementing his own
folds. Investigate.

If A.t and B.t are nonlocal types, then (with our current naming convention)
we have a name clash.
