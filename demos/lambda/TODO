Operations on terms:
  test x \in fv(t) (nominal)
  test closed(t)
  simultaneous opening? (nominal)
  conversion from debruijn back to nominal
  a printer for debruijn terms?

-- test for global uniqueness everywhere an environment is extended?

Operations on each kind of environment:
  Entering a binder (and testing for global uniqueness).

Add printers for Atom.Map, Atom.Subst,
and possibly the various kinds of environments that we use.

Document the precondition and postcondition of every function
  in terms of ownership of atoms.

Deal with more complex forms of binding.

------------------------------------------------------------------------------

TODO (POSSIBLY):

Operations in nominal style, without the GUH.
  Capture-avoiding substitution with freshening of bound names.
